name: PR Review Required

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review:
    types: [submitted, dismissed]

jobs:
  check-review:
    name: 检查PR审查状态
    runs-on: ubuntu-latest
    
    steps:
      - name: 检查是否为自己审查自己的PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: pr } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const { data: reviews } = await github.rest.pulls.listReviews({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number
            });
            
            const prAuthor = pr.user.login;
            
            // 检查是否有非PR作者的审查
            const otherApprovals = reviews.filter(review => 
              review.user.login !== prAuthor && 
              review.state === 'APPROVED'
            );
            
            console.log(`PR作者: ${prAuthor}`);
            console.log(`总审查数: ${reviews.length}`);
            console.log(`来自其他人的批准: ${otherApprovals.length}`);
            
            if (otherApprovals.length === 0) {
              core.setFailed(`❌ PR必须由其他协作者审查并批准才能合并！\n当前PR作者: ${prAuthor}\n需要另一个团队成员的审查批准。`);
            } else {
              console.log(`✅ PR已获得来自其他协作者的审查批准`);
              console.log(`批准者: ${otherApprovals.map(r => r.user.login).join(', ')}`);
            }

  # 可选：代码质量检查
  code-quality:
    name: 代码质量检查
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: 安装uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "latest"
      
      - name: 设置Python环境
        run: uv python install 3.13
      
      - name: 安装依赖
        run: uv sync --extra dev
      
      - name: 代码格式检查
        run: |
          uv run black --check src/ tests/ || (echo "❌ 代码格式不正确，请运行: uv run black src/ tests/" && exit 1)
      
      - name: 导入排序检查  
        run: |
          uv run isort --check-only src/ tests/ || (echo "❌ 导入排序不正确，请运行: uv run isort src/ tests/" && exit 1)
      
      - name: 运行测试
        run: |
          # 由于包含Windows专用功能，在Linux环境下只运行部分测试
          uv run python tests/integration/test_imports.py || echo "⚠️ 部分测试在非Windows环境下无法运行"